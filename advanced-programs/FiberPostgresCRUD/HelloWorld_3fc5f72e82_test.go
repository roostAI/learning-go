// Test generated by RoostGPT for test go-sample using AI Type Vertex AI and AI Model code-bison-32k

/*
	**Unit test scenarios for the helloWorld function:**

* **Positive test case:** The function should return a 200 status code and the message "Hello, World!" when called with a valid request.

* **Negative test case:** The function should return a 404 status code and an error message when called with an invalid request.

**Integration test scenarios for the helloWorld function:**

* **Positive test case:** The function should return a 200 status code and the message "Hello, World!" when called from a web browser.

* **Negative test case:** The function should return a 404 status code and an error message when called from a web browser with an invalid URL.

**System test scenarios for the helloWorld function:**

* **Positive test case:** The function should return a 200 status code and the message "Hello, World!" when called from a load testing tool.

* **Negative test case:** The function should return a 404 status code and an error message when called from a load testing tool with an invalid URL.
*/
package main

import (
	"net/http"
	"net/http/httptest"
	"testing"
)

func TestHelloWorld_3fc5f72e82(t *testing.T) {
	// Positive test case: The function should return a 200 status code and the message "Hello, World!" when called with a valid request.
	req, err := http.NewRequest("GET", "/", nil)
	if err != nil {
		t.Fatal(err)
	}
	resp := httptest.NewRecorder()
	helloWorld(resp, req)
	if resp.Code != http.StatusOK {
		t.Errorf("Expected status code 200, got %d", resp.Code)
	}
	if resp.Body.String() != "Hello, World!" {
		t.Errorf("Expected body 'Hello, World!', got '%s'", resp.Body.String())
	}

	// Negative test case: The function should return a 404 status code and an error message when called with an invalid request.
	req, err = http.NewRequest("GET", "/invalid", nil)
	if err != nil {
		t.Fatal(err)
	}
	resp = httptest.NewRecorder()
	helloWorld(resp, req)
	if resp.Code != http.StatusNotFound {
		t.Errorf("Expected status code 404, got %d", resp.Code)
	}
	if resp.Body.String() != "404 page not found" {
		t.Errorf("Expected body '404 page not found', got '%s'", resp.Body.String())
	}
}
