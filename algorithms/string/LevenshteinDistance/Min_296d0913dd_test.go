// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package LevenshteinDistance

import "testing"

// min function to find minimum of two numbers
func min(a, b uint16) uint16 {
	if a < b {
		return a
	}
	return b
}

// TestMin_296d0913dd is a test function for the min function
func TestMin_296d0913dd(t *testing.T) {
	// Test case 1: when a < b
	a1 := uint16(5)
	b1 := uint16(10)
	expected1 := a1
	actual1 := min(a1, b1)
	if actual1 != expected1 {
		t.Errorf("Test case 1 failed: min(%d, %d), expected %d, got %d", a1, b1, expected1, actual1)
	} else {
		t.Logf("Test case 1 success: min(%d, %d), expected %d, got %d", a1, b1, expected1, actual1)
	}

	// Test case 2: when a > b
	a2 := uint16(15)
	b2 := uint16(10)
	expected2 := b2
	actual2 := min(a2, b2)
	if actual2 != expected2 {
		t.Errorf("Test case 2 failed: min(%d, %d), expected %d, got %d", a2, b2, expected2, actual2)
	} else {
		t.Logf("Test case 2 success: min(%d, %d), expected %d, got %d", a2, b2, expected2, actual2)
	}

	// Test case 3: when a == b
	a3 := uint16(10)
	b3 := uint16(10)
	expected3 := a3
	actual3 := min(a3, b3)
	if actual3 != expected3 {
		t.Errorf("Test case 3 failed: min(%d, %d), expected %d, got %d", a3, b3, expected3, actual3)
	} else {
		t.Logf("Test case 3 success: min(%d, %d), expected %d, got %d", a3, b3, expected3, actual3)
	}
}
