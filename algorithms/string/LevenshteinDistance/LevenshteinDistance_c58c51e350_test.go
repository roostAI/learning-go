// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package LevenshteinDistance

import (
	"testing"
)

func TestLevenshteinDistance_c58c51e350(t *testing.T) {
	t.Run("Test with same strings", func(t *testing.T) {
		a := "test"
		b := "test"
		expected := 0
		got := levenshteinDistance(a, b)
		if got != expected {
			t.Errorf("Expected %d, but got %d", expected, got)
		} else {
			t.Logf("Success: Expected %d and got %d", expected, got)
		}
	})

	t.Run("Test with one empty string", func(t *testing.T) {
		a := ""
		b := "test"
		expected := len(b)
		got := levenshteinDistance(a, b)
		if got != expected {
			t.Errorf("Expected %d, but got %d", expected, got)
		} else {
			t.Logf("Success: Expected %d and got %d", expected, got)
		}
	})

	t.Run("Test with different strings", func(t *testing.T) {
		a := "kitten"
		b := "sitting"
		expected := 3
		got := levenshteinDistance(a, b)
		if got != expected {
			t.Errorf("Expected %d, but got %d", expected, got)
		} else {
			t.Logf("Success: Expected %d and got %d", expected, got)
		}
	})

	t.Run("Test with non-English characters", func(t *testing.T) {
		a := "café"
		b := "caffè"
		expected := 2
		got := levenshteinDistance(a, b)
		if got != expected {
			t.Errorf("Expected %d, but got %d", expected, got)
		} else {
			t.Logf("Success: Expected %d and got %d", expected, got)
		}
	})
}
