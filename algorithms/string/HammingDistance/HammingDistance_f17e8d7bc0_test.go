// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package HammingDistance

import (
	"log"
	"testing"
)

func hammingDistance(a, b string) int {
	if len(a) != len(b) {
		log.Fatal("Strings are of different length")
	}

	var distance int = 0

	for i := 0; i < len(a); i++ {
		if a[i] != b[i] {
			distance++
		}
	}

	return distance
}

func TestHammingDistance_f17e8d7bc0(t *testing.T) {
	t.Run("strings of equal length", func(t *testing.T) {
		a := "abc"
		b := "def"
		expected := 3
		result := hammingDistance(a, b)
		if result != expected {
			t.Errorf("Expected %d but got %d", expected, result)
		}
	})

	t.Run("strings of different length", func(t *testing.T) {
		a := "abcd"
		b := "def"
		defer func() {
			if r := recover(); r == nil {
				t.Error("The code did not panic")
			}
		}()
		hammingDistance(a, b)
	})

	t.Run("strings with no differences", func(t *testing.T) {
		a := "abc"
		b := "abc"
		expected := 0
		result := hammingDistance(a, b)
		if result != expected {
			t.Errorf("Expected %d but got %d", expected, result)
		}
	})
}
