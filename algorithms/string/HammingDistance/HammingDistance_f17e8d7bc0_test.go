// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package HammingDistance

import (
	"log"
	"testing"
)

func TestHammingDistance_f17e8d7bc0(t *testing.T) {
	// Test case 1: strings of equal length
	a1, b1 := "test", "tent"
	expected1 := 1
	if res := hammingDistance(a1, b1); res != expected1 {
		t.Errorf("hammingDistance(%q, %q) = %v, want %v", a1, b1, res, expected1)
	} else {
		t.Logf("Success: hammingDistance(%q, %q) = %v", a1, b1, res)
	}

	// Test case 2: strings of different length
	a2, b2 := "test", "testing"
	defer func() {
		if r := recover(); r == nil {
			t.Errorf("The code did not panic")
		} else {
			t.Logf("Recovered panic: %v", r)
		}
	}()
	hammingDistance(a2, b2)

	// Test case 3: strings of equal length but no difference
	a3, b3 := "test", "test"
	expected3 := 0
	if res := hammingDistance(a3, b3); res != expected3 {
		t.Errorf("hammingDistance(%q, %q) = %v, want %v", a3, b3, res, expected3)
	} else {
		t.Logf("Success: hammingDistance(%q, %q) = %v", a3, b3, res)
	}
}
