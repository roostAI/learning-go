// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package HammingDistance

import (
	"log"
	"testing"
)

func hammingDistance(a, b string) int {
	if len(a) != len(b) {
		log.Fatal("Strings are of different length")
	}

	var distance int = 0

	for i := 0; i < len(a); i++ {
		if a[i] != b[i] {
			distance++
		}
	}

	return distance
}

func TestHammingDistance_f17e8d7bc0(t *testing.T) {
	cases := []struct {
		a, b string
		want  int
	}{
		{"karolin", "kathrin", 3},
		{"karolin", "karolin", 0},
		{"1011101", "1001001", 2},
		{"2173896", "2233796", 3},
	}

	for _, c := range cases {
		got := hammingDistance(c.a, c.b)
		if got != c.want {
			t.Errorf("hammingDistance(%q, %q) == %q, want %q", c.a, c.b, got, c.want)
		} else {
			t.Logf("Success: hammingDistance(%q, %q) == %q", c.a, c.b, got)
		}
	}

	// Test case where strings are of different length
	defer func() {
		if r := recover(); r == nil {
			t.Error("The code did not panic")
		}
	}()
	hammingDistance("123", "1234")
}
