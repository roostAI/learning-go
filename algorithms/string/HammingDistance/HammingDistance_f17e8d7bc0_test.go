// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package HammingDistance

import (
	"log"
	"testing"
)

func TestHammingDistance_f17e8d7bc0(t *testing.T) {
	t.Run("test with same length strings", func(t *testing.T) {
		a := "hello"
		b := "world"
		expected := 4

		result := hammingDistance(a, b)

		if result != expected {
			t.Errorf("Expected %d but got %d", expected, result)
			t.Logf("Tested with arguments a: %s, b: %s", a, b)
		} else {
			t.Logf("Success! Expected %d and got %d", expected, result)
		}
	})

	t.Run("test with different length strings", func(t *testing.T) {
		a := "hello"
		b := "worlds"
		defer func() {
			if r := recover(); r == nil {
				t.Error("The code did not panic")
				t.Logf("Tested with arguments a: %s, b: %s", a, b)
			} else {
				t.Logf("Success! The code panicked as expected")
			}
		}()

		hammingDistance(a, b)
	})

	t.Run("test with same strings", func(t *testing.T) {
		a := "hello"
		b := "hello"
		expected := 0

		result := hammingDistance(a, b)

		if result != expected {
			t.Errorf("Expected %d but got %d", expected, result)
			t.Logf("Tested with arguments a: %s, b: %s", a, b)
		} else {
			t.Logf("Success! Expected %d and got %d", expected, result)
		}
	})
}
