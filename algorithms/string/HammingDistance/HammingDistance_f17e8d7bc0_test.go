// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package HammingDistance

import (
	"log"
	"testing"
)

func TestHammingDistance_f17e8d7bc0(t *testing.T) {
	testCases := []struct {
		a        string
		b        string
		expected int
	}{
		{"karolin", "kathrin", 3},
		{"karolin", "karolin", 0},
		{"1011101", "1001001", 2},
		{"2173896", "2233796", 1},
	}

	for _, tc := range testCases {
		result := hammingDistance(tc.a, tc.b)
		if result != tc.expected {
			t.Errorf("For strings %v and %v, expected distance %v but got %v", tc.a, tc.b, tc.expected, result)
		} else {
			t.Logf("Success: For strings %v and %v, expected distance %v and got %v", tc.a, tc.b, tc.expected, result)
		}
	}

	// Test for strings of different lengths
	defer func() {
		if r := recover(); r == nil {
			t.Error("The code did not panic")
		} else {
			t.Log("Success: The code panicked as expected")
		}
	}()
	hammingDistance("karolin", "karol")
}
