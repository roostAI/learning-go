// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package HammingDistance

import (
	"log"
	"testing"
)

func hammingDistance(a, b string) int {
	if len(a) != len(b) {
		log.Fatal("Strings are of different length")
	}

	var distance int = 0

	for i := 0; i < len(a); i++ {
		if a[i] != b[i] {
			distance++
		}
	}

	return distance
}

func TestHammingDistance_f17e8d7bc0(t *testing.T) {
	// Test Case 1: Same strings
	a := "hello"
	b := "hello"
	expected := 0
	result := hammingDistance(a, b)
	if result != expected {
		t.Error("Failed Test Case 1: Expected", expected, "but got", result)
	} else {
		t.Log("Passed Test Case 1: Hamming Distance is", result)
	}

	// Test Case 2: Different strings
	a = "hello"
	b = "helli"
	expected = 1
	result = hammingDistance(a, b)
	if result != expected {
		t.Error("Failed Test Case 2: Expected", expected, "but got", result)
	} else {
		t.Log("Passed Test Case 2: Hamming Distance is", result)
	}

	// Test Case 3: Different length strings
	a = "hello"
	b = "hell"
	defer func() {
		if r := recover(); r == nil {
			t.Error("Failed Test Case 3: The code did not panic")
		} else {
			t.Log("Passed Test Case 3: The code panicked")
		}
	}()
	hammingDistance(a, b)
}
