// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package HammingDistance

import (
	"log"
	"testing"
)

func hammingDistance(a, b string) int {
	if len(a) != len(b) {
		log.Fatal("Strings are of different length")
	}

	var distance int = 0

	for i := 0; i < len(a); i++ {
		if a[i] != b[i] {
			distance++
		}
	}

	return distance
}

func TestHammingDistance_f17e8d7bc0(t *testing.T) {
	// Test case 1: Strings of equal length and no differences
	a1 := "abc"
	b1 := "abc"
	expected1 := 0
	result1 := hammingDistance(a1, b1)
	if result1 != expected1 {
		t.Errorf("hammingDistance(%s, %s) = %d; want %d", a1, b1, result1, expected1)
	} else {
		t.Logf("Test case 1 passed")
	}

	// Test case 2: Strings of equal length and some differences
	a2 := "abcd"
	b2 := "abce"
	expected2 := 1
	result2 := hammingDistance(a2, b2)
	if result2 != expected2 {
		t.Errorf("hammingDistance(%s, %s) = %d; want %d", a2, b2, result2, expected2)
	} else {
		t.Logf("Test case 2 passed")
	}

	// Test case 3: Strings of different length
	a3 := "abc"
	b3 := "abcd"
	defer func() {
		if r := recover(); r == nil {
			t.Errorf("hammingDistance(%s, %s) should have panicked", a3, b3)
		} else {
			t.Logf("Test case 3 passed")
		}
	}()
	hammingDistance(a3, b3)
}
