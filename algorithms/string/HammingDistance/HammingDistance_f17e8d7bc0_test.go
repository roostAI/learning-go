// Test generated by RoostGPT for test go-unit-algo-string using AI Type Open AI and AI Model gpt-4

package HammingDistance

import (
	"testing"
)

func TestHammingDistance_f17e8d7bc0(t *testing.T) {
	t.Run("Strings of equal length", func(t *testing.T) {
		a := "abc"
		b := "adc"
		expected := 1
		result := hammingDistance(a, b)

		if result != expected {
			t.Errorf("Failed! Expected %d, but got %d", expected, result)
		} else {
			t.Logf("Success! For strings '%s' and '%s', expected hamming distance was %d, and got %d", a, b, expected, result)
		}
	})

	t.Run("Strings of different length", func(t *testing.T) {
		a := "abc"
		b := "ad"
		defer func() {
			if r := recover(); r == nil {
				t.Error("The code did not panic when strings of different lengths were passed")
			}
		}()
		hammingDistance(a, b)
	})

	t.Run("Strings with no difference", func(t *testing.T) {
		a := "abc"
		b := "abc"
		expected := 0
		result := hammingDistance(a, b)

		if result != expected {
			t.Errorf("Failed! Expected %d, but got %d", expected, result)
		} else {
			t.Logf("Success! For strings '%s' and '%s', expected hamming distance was %d, and got %d", a, b, expected, result)
		}
	})
}
