/*
Test generated by RoostGPT for test go-sample using AI Type Azure Open AI and AI Model roost-gpt4-32k

1. Test scenario - Positive Integer is a Power of Two:
   Description: This test scenario validates if a positive integer is a power of two.
   Input: num = 4
   Expected Output: Returns true as 4 is a power of two (2^2).

2. Test scenario - Positive Integer is Not a Power of Two:
   Description: This test scenario validates if a positive integer is not a power of two.
   Input: num = 6
   Expected Output: Returns false as 6 is not a power of two.

3. Test scenario - Integer Equal to Two:
   Description: This test scenario validates if the function correctly identifies 2 as a power of two.
   Input: num = 2
   Expected Output: Returns true as 2 is a power of two (2^1).

4. Test scenario - Negative Integer:
   Description: This test scenario validates that the function returns false for negative integers.
   Input: num = -4
   Expected Output: Returns false as negative integers are not a power of two.

5. Test scenario - Zero Input Value:
   Description: This test scenario validates that the function returns false if the input value is zero.
   Input: num = 0
   Expected Output: Returns false as zero is not a power of two.

6. Test scenario - One Input Value:
   Description: This test scenario validates that the function returns false if the input value is one.
   Input: num = 1
   Expected Output: Returns false as one is not a power of two as defined by the function.

7. Test scenario - Very Large Power of Two:
   Description: This test scenario validates that the function correctly processes large power of two integers.
   Input: num = 2^30
   Expected Output: Returns true as this large number is a power of two.

8. Test scenario - Very Large Non-Power of Two:
   Description: This test scenario validates that the function correctly processes large non-power of two integers.
   Input: num = (2^30) + 3
   Expected Output: Returns false as this large number is not a power of two.
*/
package IsPowerOfTwo

import (
	"testing"
)

func TestIsPowerOfTwo_2dd3de6f6a(t *testing.T) {

	tests := []struct {
		name  string
		input int
		want  bool
	}{
		{"Positive Integer is a Power of Two", 4, true},
		{"Positive Integer is Not a Power of Two", 6, false},
		{"Integer Equal to Two", 2, true},
		{"Negative Integer", -4, false},
		{"Zero Input Value", 0, false},
		{"One Input Value", 1, false},
		// TODO: Replace "2^30" with equivalent integer value
		{"Very Large Power of Two", 1073741824, true},
		// TODO: Replace "(2^30) + 3" with equivalent integer value
		{"Very Large Non-Power of Two", 1073741827, false},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := isPowerOfTwo(tt.input); got != tt.want {
				t.Errorf("isPowerOfTwo(%d) = %v, want %v", tt.input, got, tt.want)
			} else {
				t.Logf("Success in test case: %s", tt.name)
			}
		})
	}
}
