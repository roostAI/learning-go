// Test generated by RoostGPT for test go-test using AI Type Open AI and AI Model gpt-4

package middleware

import (
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"

	"github.com/gorilla/mux"
)

func TestUndoTask_266d444a63(t *testing.T) {

	// Success case
	req, err := http.NewRequest("POST", "/undoTask", strings.NewReader(`{"id":"123"}`))
	if err != nil {
		t.Fatal(err)
	}
	rr := httptest.NewRecorder()
	router := mux.NewRouter()
	router.HandleFunc("/undoTask", UndoTask)
	router.ServeHTTP(rr, req)

	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v", status, http.StatusOK)
	}

	expected := `{"id":"123"}`
	if rr.Body.String() != expected {
		t.Errorf("handler returned unexpected body: got %v want %v", rr.Body.String(), expected)
	}
	t.Log("Success case passed")

	// Failure case
	req, err = http.NewRequest("POST", "/undoTask", strings.NewReader(`{"id":""}`))
	if err != nil {
		t.Fatal(err)
	}
	rr = httptest.NewRecorder()
	router.ServeHTTP(rr, req)

	if status := rr.Code; status != http.StatusBadRequest {
		t.Errorf("handler returned wrong status code: got %v want %v", status, http.StatusBadRequest)
	}
	t.Log("Failure case passed")
}
